generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Segment {
  id          Int       @id @default(autoincrement())
  slug        String?   @db.VarChar(100)
  label       String?   @db.VarChar(90)
  image       String?   @db.VarChar(254)
  actived     Boolean?  @default(true)
  description String?   @db.VarChar(254)
  customPage  Boolean?
  createdAt   DateTime  @default(now()) @db.Timestamp(0)
  updatedAt   DateTime? @updatedAt @db.DateTime(0)

  @@map("segments")
}

model Product {
  id          Int       @id @default(autoincrement())
  slug        String    @unique(map: "slug") @db.VarChar(100)
  name        String?   @db.VarChar(96)
  description String?   @db.Text
  tags        String?   @db.LongText
  price       Decimal   @default(0.00) @db.Decimal(10, 2)
  size        Float     @db.Float
  idkind      Int?
  idcat       Int       @default(0) @db.UnsignedInt
  idsubcat    Int       @default(0) @db.UnsignedInt
  idgroup     Int       @default(0) @db.UnsignedInt
  segmentId   Int?      @db.UnsignedInt
  unavailable Boolean?  @default(false)
  actived     Boolean?  @default(true)
  hits        Int?      @default(0) @db.UnsignedInt
  meta        String?   @db.LongText
  createdBy   Int?
  updatedBy   Int?
  createdAt   DateTime  @default(now()) @db.Timestamp(0)
  updatedAt   DateTime? @updatedAt @db.DateTime(0)

  images        Image[]
  kind          ProductKind?   @relation(fields: [idkind], references: [id])
  purchaseItems PurchaseItem[]

  @@index([actived], map: "actived")
  @@index([createdBy], map: "createdBy")
  @@index([idcat], map: "idcat")
  @@index([idgroup], map: "idgroup")
  @@index([idkind], map: "idkind")
  @@map(name: "products")
}

model Image {
  id          Int       @id @default(autoincrement())
  groupId     Int?
  productId   Int?
  label       String?   @db.VarChar(100)
  description String?   @db.Text
  path        String?   @db.VarChar(254)
  main        Boolean   @default(false)
  ext         String?   @db.VarChar(6)
  meta        String?   @db.LongText
  actived     Boolean   @default(true)
  hash        String    @db.VarChar(32)
  createdBy   Int       @default(0)
  createdAt   DateTime? @default(now()) @db.Timestamp(0)
  hits        Int       @default(0) @db.UnsignedInt
  product     Product?  @relation(fields: [productId], references: [id])

  @@index([actived], map: "actived")
  @@index([productId], map: "groupId")
  @@index([main], map: "main")
  @@index([productId], map: "productId")
  @@map(name: "images")
}

model ProductKind {
  id       Int       @id @default(autoincrement())
  label    String?   @db.VarChar(90)
  actived  Boolean   @default(true)
  meta     String?   @db.LongText
  products Product[]

  @@index([actived], map: "actived")
  @@map(name: "product_kinds")
}

model User {
  id            Int        @id @default(autoincrement())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  userHash      String?    @db.VarChar(32)
  password      String?    @db.VarChar(64)
  cpf           String?    @db.VarChar(15)
  cellPhone     String?    @db.VarChar(20)
  level         Int?       @db.UnsignedInt
  meta          Json?
  image         String?    @db.Text
  actived       Boolean?   @default(false)
  createdAt     DateTime?  @default(now()) @db.Timestamp(0)
  updatedAt     DateTime?  @updatedAt
  accounts      Account[]
  sessions      Session[]
  adresses      Adresses[]
  purchases     Purchase[]

  @@map(name: "users")
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique
  userId             Int
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime? @default(now()) @db.Timestamp(0)
  updatedAt          DateTime? @updatedAt
  user               User      @relation(fields: [userId], references: [id])


  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map(name: "accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now()) @db.Timestamp(0)
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])

  @@map(name: "sessions")
}

model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())

  @@map(name: "verification_requests")
}

model Adresses {
  id          Int       @id @default(autoincrement())
  userId      Int       @default(0)
  label       String?   @db.VarChar(64)
  stateId     Int       @default(0) @db.UnsignedInt
  cityId      Int       @default(0) @db.UnsignedInt
  cepId       Int?      @default(0) @db.UnsignedInt
  cep         String    @db.VarChar(10)
  street      String    @db.VarChar(100)
  district    String    @db.VarChar(100)
  houseNumber String?   @db.VarChar(20)
  complement  String?   @db.Text
  meta        String?   @db.LongText
  actived     Boolean?  @default(true)
  createdAt   DateTime? @default(now()) @db.Timestamp(0)
  updatedBy   Int?      @default(0)
  updatedAt   DateTime? @updatedAt

  user      User       @relation(fields: [userId], references: [id])
  purchases Purchase[]
  uf        Uf         @relation(fields: [stateId], references: [id])
  city      City       @relation(fields: [cityId], references: [id])

  @@index([actived], map: "actived")
  @@index([cepId], map: "cepId")
  @@index([cityId], map: "cityId")
  @@index([stateId], map: "stateId")
  @@index([userId], map: "userId")
  @@map(name: "adresses")
}

model Uf {
  id      Int     @id @default(autoincrement())
  name    String? @db.VarChar(90)
  abbr    String  @db.VarChar(5)
  actived Boolean @default(false)
  cities  City[]

  adresses Adresses[]

  @@index([actived], map: "actived")
  @@map(name: "states")
}

model City {
  id      Int      @id @default(autoincrement())
  stateId Int      @default(23)
  name    String?  @db.VarChar(90)
  capital Boolean? @default(false)
  actived Boolean  @default(false)

  uf       Uf         @relation(fields: [stateId], references: [id])
  adresses Adresses[]

  @@index([actived], map: "actived")
  @@index([stateId], map: "stateId")
  @@map(name: "cities")
}

// model app_config {
//   id      Int     @id @default(autoincrement())
//   key     String  @unique(map: "key") @db.VarChar(32)
//   value   String? @db.VarChar(254)
//   meta    String? @db.LongText
//   actived Boolean @default(false)

//   @@index([actived], map: "actived")
// }

// model categories {
//   id          Int     @id @default(autoincrement())
//   slug        String  @unique(map: "slug") @db.VarChar(100)
//   icon        String? @db.VarChar(254)
//   name        String? @db.VarChar(96)
//   description String? @db.LongText
//   meta        String? @db.LongText
//   actived     Boolean @default(true)
//   hits        Int     @default(0) @db.UnsignedInt

//   @@index([actived], map: "actived")
// }

model Payment {
  id         Int       @id @default(autoincrement())
  uuid       String?   @unique(map: "uuid") @db.VarChar(40)
  purchaseId Int       @default(0) @db.UnsignedInt
  method     String    @db.VarChar(10)
  value      Float     @default(0.00)
  paid       Boolean   @default(false)
  payday     DateTime? @db.DateTime(0)
  txid       String?   @unique(map: "txid") @db.VarChar(35)
  overdue    DateTime? @db.Date
  createdBy  Int       @default(0)
  createdAt  DateTime? @default(now()) @db.Timestamp(0)
  updatedBy  Int?      @default(0)
  updatedAt  DateTime? @db.DateTime(0)
  meta       String?   @db.LongText
  actived    Boolean   @default(true)

  purchase Purchase @relation(fields: [purchaseId], references: [id])

  @@index([method], map: "method")
  @@index([paid], map: "paid")
  @@index([purchaseId], map: "purchaseId")
  @@map("payments")
}

// model product_groups {
//   id        Int       @id @default(autoincrement())
//   label     String?   @unique(map: "label") @db.VarChar(90)
//   image     String?   @db.VarChar(254)
//   actived   Boolean   @default(true)
//   meta      String?   @db.LongText
//   createdBy Int       @default(0)
//   createdAt DateTime? @default(now()) @db.Timestamp(0)
//   updatedBy Int       @default(0)
//   updatedAt DateTime? @db.DateTime(0)
// }

model PurchaseItem {
  id         Int       @id @default(autoincrement())
  purchaseId Int
  productId  Int
  name       String?   @db.VarChar(90)
  size       Float     @db.Float
  price      Decimal   @default(0) @db.Decimal(10, 0)
  quantity   Int
  meta       String?   @db.LongText
  actived    Boolean   @default(true)
  updatedBy  Int?      @default(0)
  updatedAt  DateTime? @updatedAt

  purchase Purchase @relation(fields: [purchaseId], references: [id])
  product  Product  @relation(fields: [productId], references: [id])

  @@unique([purchaseId, productId], map: "uniqueItem")
  @@map(name: "purchase_items")
}

model Purchase {
  id           Int       @id @default(autoincrement())
  userId       Int
  fileId       Int?
  addrId       Int?      @default(-1)
  discount     Float     @default(0.00)
  status       Int       @default(1) @db.UnsignedInt
  paid         Boolean   @default(false)
  displayValue Decimal   @default(0) @db.Decimal(10, 0)
  meta         String?   @db.LongText
  actived      Boolean   @default(true)
  obs          String?   @db.LongText
  createdBy    Int
  createdAt    DateTime? @default(now()) @db.Timestamp(0)
  updatedBy    Int?      @default(0)
  updatedAt    DateTime? @updatedAt

  items    PurchaseItem[]
  user     User           @relation(fields: [userId], references: [id])
  address  Adresses?      @relation(fields: [addrId], references: [id])
  payments Payment[]


  @@index([actived], map: "actived")
  @@index([fileId], map: "fileId")
  @@index([paid], map: "paid")
  @@index([status], map: "status")
  @@index([userId], map: "userId")
  @@map(name: "purchases")
}

// model user_files {
//   id          Int       @id @default(autoincrement())
//   userId      Int       @default(0)
//   label       String?   @db.VarChar(100)
//   description String?   @db.Text
//   path        String?   @db.VarChar(254)
//   ext         String?   @db.VarChar(6)
//   size        Int?      @default(0) @db.UnsignedInt
//   actived     Boolean   @default(true)
//   price       Decimal   @default(5.00) @db.Decimal(10, 2)
//   hash        String    @db.VarChar(36)
//   hits        Int       @default(0) @db.UnsignedInt
//   meta        String?   @db.LongText
//   createdBy   Int       @default(0)
//   createdAt   DateTime? @default(now()) @db.Timestamp(0)

//   @@index([actived], map: "actived")
//   @@index([hash], map: "hash")
//   @@index([userId], map: "userId")
// }
